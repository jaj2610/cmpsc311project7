  // for use with getopt(3)
  int ch;
  extern char *optarg;
  extern int optind;
  extern int optopt;
  extern int opterr;

  // program name as actually used
  prog = argv[0];
  /* In extremely strange situations, argv[0] could be NULL, or point to an
   * empty string.  Let's just ignore that for now.
   */

  // exit status
  int status = EXIT_SUCCESS;

  // option flags and option-arguments set from the command line
  int f_flag = 0;	// number of -f options supplied

  // first pass, everything except -f options (let the -v options accumulate)
  while ((ch = getopt(argc, argv, ":hvf:")) != -1)
    {
      switch (ch) {
        case 'h':
          usage(EXIT_SUCCESS);
          break;
        case 'v':
          verbose++;
          break;
	case 'f':
	  // later
	  break;
        case '?':
          fprintf(stderr, "%s: invalid option '%c'\n", prog, optopt);
          usage(EXIT_FAILURE);
          break;
        case ':':
          fprintf(stderr, "%s: invalid option '%c' (missing argument)\n", prog, optopt);
          usage(EXIT_FAILURE);
          break;
        default:
          usage(EXIT_FAILURE);
          break;
      }
    }

  // scan the argv array again, from the beginning
  optind = 1;
  while ((ch = getopt(argc, argv, ":hvf:")) != -1)
    {
      switch (ch) {
	case 'f':
	  f_flag++;		// number of -f options supplied
	  (void) read_file(optarg, 0);
	  break;
        default:
          break;
      }
    }
